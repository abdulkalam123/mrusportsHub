/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-05-28 06:25:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;

public final class hockey_002dteam_002dadmin1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(5);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Hockey Team Players</title>\r\n");
      out.write("    <link rel=\"icon\" type=\"images/png\" href=\"images/mru logo.png\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div>\r\n");
      out.write("        <div class=\"title\">\r\n");
      out.write("            <hr>\r\n");
      out.write("            <h1>HOCKEY TEAM PLAYERS</h1>\r\n");
      out.write("            <hr>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"navlist\">\r\n");
      out.write("            <a href=\"hockeyTeam.jsp\">New</a>\r\n");
      out.write("            <a href=\"hockey-team-admin2.jsp\">Edit/Remove</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <br><br>\r\n");
      out.write("        <div class=\"list\">\r\n");
      out.write("            <h2>FORWARD</h2>\r\n");
      out.write("            <div class=\"forward\">\r\n");
      out.write("                ");
 try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/login", "root", "mysql");
                    Statement stmt = con.createStatement();
                    ResultSet rs = stmt.executeQuery("SELECT * FROM hockeyteam WHERE playerPosition = 'Forward'");
                    while (rs.next()) { 
      out.write("\r\n");
      out.write("                        <div class=\"player\">\r\n");
      out.write("                            <img src=\"");
      out.print( rs.getString("image") );
      out.write("\" alt=\"Player Image\">\r\n");
      out.write("                            <p>Name: ");
      out.print( rs.getString("playerName") );
      out.write("</p>\r\n");
      out.write("                            <p>Position: ");
      out.print( rs.getString("playerPosition") );
      out.write("</p>\r\n");
      out.write("                            <p>Total points: ");
      out.print( rs.getString("totalPoints") );
      out.write("</p>\r\n");
      out.write("                            <p>Goals: ");
      out.print( rs.getInt("goals") );
      out.write("</p>\r\n");
      out.write("                            <p>Assists: ");
      out.print( rs.getInt("assists") );
      out.write("</p>\r\n");
      out.write("                            <p>Penalty Minutes: ");
      out.print( rs.getInt("penaltyMinutes") );
      out.write("</p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");
 }
                    con.close();
                } catch (Exception e) {
                    out.println(e);
                } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <br>\r\n");
      out.write("            \r\n");
      out.write("            <h2>DEFENSEMAN</h2>\r\n");
      out.write("            <div class=\"defenseman\">\r\n");
      out.write("                ");
 try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/login", "root", "mysql");
                    Statement stmt = con.createStatement();
                    ResultSet rs = stmt.executeQuery("SELECT * FROM hockeyteam WHERE playerPosition = 'Defenseman'");
                    while (rs.next()) { 
      out.write("\r\n");
      out.write("                        <div class=\"player\">\r\n");
      out.write("                            <img src=\"");
      out.print( rs.getString("image") );
      out.write("\" alt=\"Player Image\">\r\n");
      out.write("                            <p>Name: ");
      out.print( rs.getString("playerName") );
      out.write("</p>\r\n");
      out.write("                            <p>Position: ");
      out.print( rs.getString("playerPosition") );
      out.write("</p>\r\n");
      out.write("                            <p>Total points: ");
      out.print( rs.getString("totalPoints") );
      out.write("</p>\r\n");
      out.write("                            <p>Goals: ");
      out.print( rs.getInt("goals") );
      out.write("</p>\r\n");
      out.write("                            <p>Assists: ");
      out.print( rs.getInt("assists") );
      out.write("</p>\r\n");
      out.write("                            <p>Penalty Minutes: ");
      out.print( rs.getInt("penaltyMinutes") );
      out.write("</p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");
 }
                    con.close();
                } catch (Exception e) {
                    out.println(e);
                } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <br>\r\n");
      out.write("            \r\n");
      out.write("            <h2>GOALKEEPER</h2>\r\n");
      out.write("            <div class=\"goalkeeper\">\r\n");
      out.write("                ");
 try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/login", "root", "mysql");
                    Statement stmt = con.createStatement();
                    ResultSet rs = stmt.executeQuery("SELECT * FROM hockeyteam WHERE playerPosition = 'Goalkeeper'");
                    while (rs.next()) { 
      out.write("\r\n");
      out.write("                        <div class=\"player\">\r\n");
      out.write("                            <img src=\"");
      out.print( rs.getString("image") );
      out.write("\" alt=\"Player Image\">\r\n");
      out.write("                            <p>Name: ");
      out.print( rs.getString("playerName") );
      out.write("</p>\r\n");
      out.write("                            <p>Position: ");
      out.print( rs.getString("playerPosition") );
      out.write("</p>\r\n");
      out.write("                            <p>Total points: ");
      out.print( rs.getString("totalPoints") );
      out.write("</p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");
 }
                    con.close();
                } catch (Exception e) {
                    out.println(e);
                } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("        // Function to refresh the page every 30 seconds\r\n");
      out.write("        setInterval(function() {\r\n");
      out.write("            location.reload();\r\n");
      out.write("        }, 30000); // 30 seconds\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<style>\r\n");
      out.write("font-family: 'Lato', sans-serif;\r\n");
      out.write("font-family: 'Sevillana', cursive; \r\n");
      out.write("\r\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Lato:wght@100;300;400;700&family=Sevillana&display=swap'); \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    * {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("        font-family: 'Lato', sans-serif;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .title {\r\n");
      out.write("        background: url('images/hockeybg.jpg');\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        min-height: 40px;\r\n");
      out.write("        background-size: cover;\r\n");
      out.write("        background-position: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .title h1 {\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        color: black; \r\n");
      out.write("        font-size: 50px;\r\n");
      out.write("        padding-top: 50px;\r\n");
      out.write("        text-shadow: \r\n");
      out.write("            -4px -4px 0 white,  \r\n");
      out.write("            4px -4px 0 white,\r\n");
      out.write("            -4px 4px 0 white,\r\n");
      out.write("            4px 4px 0 white;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .navlist {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: flex-end;\r\n");
      out.write("        gap: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .navlist a {\r\n");
      out.write("        color: black;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        font-size: 16px;\r\n");
      out.write("        background-color: rgb(234, 156, 55);\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .list h2 {\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        font-size: 22px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .forward,\r\n");
      out.write("    .defenseman,\r\n");
      out.write("    .goalkeeper {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        flex-wrap: wrap;\r\n");
      out.write("        gap: 20px; \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .player {\r\n");
      out.write("        width: calc(25% - 20px); \r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border: 1px solid #ccc;\r\n");
      out.write("        box-sizing: border-box; \r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .player img {\r\n");
      out.write("        max-width: 200px;\r\n");
      out.write("        height: 200px;\r\n");
      out.write("        display: block;\r\n");
      out.write("        margin: 0 auto 10px;\r\n");
      out.write("        object-fit: cover;\r\n");
      out.write("        object-position: top;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
